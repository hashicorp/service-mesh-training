# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MIT

---
apiVersion: v1
kind: Service
metadata:
  name: emojify-ingress
spec:
  type: NodePort
  selector:
    app: emojify-ingress
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 30000

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: emojify-ingress-configmap
data:
  config: |
    events {
      worker_connections  1024;
    }

    http {
      upstream emojify-website {
        keepalive 100;
        server 127.0.0.1:8000;
      }
      upstream emojify-api {
        keepalive 100;
        server 127.0.0.1:8001;
      }

      server {
        location / {
          proxy_http_version 1.1;
          proxy_pass http://emojify-website;
          proxy_set_header Host $host;
        }

        location ~ ^/api(/.*)?$ {
          proxy_http_version 1.1;
          proxy_pass http://emojify-api$1$is_args$args;
          proxy_pass_request_headers on;
        }
      }
    }
  envoy-bootstrap: |
    admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 19000
    node:
      cluster: "${POD_NAME}-emojify-ingress-proxy"
      id: "${POD_NAME}-emojify-ingress-proxy"
    static_resources:
      clusters:
      - name: local_agent
        connect_timeout: 1s
        type: STATIC
        http2_protocol_options: {}
        hosts:
        - socket_address:
           address: "${HOST_IP}"
           port_value: "8502"
    dynamic_resources:
      lds_config:
        ads: {}
      cds_config:
        ads: {}
      ads_config:
        api_type: GRPC
        grpc_services:
          envoy_grpc:
            cluster_name: local_agent
    stats_sinks:
    - name: "envoy.dog_statsd"
      config:
        address: 
          socket_address:
            address: "127.0.0.1"
            port_value: 9125
        prefix: "envoy"
    stats_config:
      use_all_default_tags: true
  consul-config: |
    services {
      id   = "${POD_NAME}-emojify-ingress-proxy"
      name = "emojify-ingress-proxy"
      kind = "connect-proxy"
      address = "${POD_IP}"
      port = 20000
    
      proxy {
        destination_service_name = "emojify-ingress"
        destination_service_id = "emojify-ingress"
        local_service_address = "127.0.0.1"
        local_service_port = 80

        config {
          envoy_public_listener_json = <<EOL
          {
          "@type": "type.googleapis.com/envoy.api.v2.Listener",
          "name": "public_listener:${POD_IP}:20000",
          "address": {
            "socketAddress": {
              "address": "${POD_IP}",
              "portValue": 20000
            }
          },
          "filterChains": [
            {
              "filters": [
                {
                  "name": "envoy.http_connection_manager",
                  "config": {
                    "stat_prefix": "ingress_http",
                    "route_config": {
                      "name": "local_route",
                      "virtual_hosts": [
                        {
                          "name": "backend",
                          "domains": ["*"],
                          "routes": [
                            {
                              "match": {
                                "prefix": "/"
                              },
                              "route": {
                                "cluster": "local_app"
                              }
                            }
                          ]
                        }
                      ]
                    },
                    "http_filters": [
                      {
                        "name": "envoy.router",
                        "config": {}
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
          EOL
        }

        upstreams {                                                         
          destination_name = "emojify-website"                                                                   
          local_bind_port = 8000

          config {
            envoy_listener_json = <<EOL
              {
              "@type": "type.googleapis.com/envoy.api.v2.Listener",
              "name": "service:emojify-website:8000",
              "address": {
                "socketAddress": {
                  "address": "127.0.0.1",
                  "portValue": 8000
                }
              },
              "filterChains": [
                {
                  "filters": [
                    {
                      "name": "envoy.http_connection_manager",
                      "config": {
                        "stat_prefix": "service:emojify-website",
                        "route_config": {
                          "name": "local_route",
                          "virtual_hosts": [
                            {
                              "name": "backend",
                              "domains": ["*"],
                              "routes": [
                                {
                                  "match": {
                                    "prefix": "/"
                                  },
                                  "route": {
                                    "cluster": "service:emojify-website"
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        "http_filters": [
                          {
                            "name": "envoy.router",
                            "config": {}
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
            EOL
          }
        }              

        upstreams {                                           
          destination_name = "emojify-api"                      
          local_bind_port = 8001
          
          config {
            envoy_cluster_json = <<EOL
              {
                "@type": "type.googleapis.com/envoy.api.v2.Cluster",
                "name": "service:emojify-api",
                "type": "EDS",
                "eds_cluster_config": {
                  "eds_config": {
                    "ads": {}
                  }
                },
                "connect_timeout": "5s"
              }
            EOL

            envoy_listener_json = <<EOL
              {
              "@type": "type.googleapis.com/envoy.api.v2.Listener",
              "name": "service:emojify-api:8001",
              "address": {
                "socketAddress": {
                  "address": "127.0.0.1",
                  "portValue": 8001
                }
              },
              "filterChains": [
                {
                  "filters": [
                    {
                      "name": "envoy.http_connection_manager",
                      "config": {
                        "stat_prefix": "service:emojify-api",
                        "route_config": {
                          "name": "local_route",
                          "virtual_hosts": [
                            {
                              "name": "backend",
                              "domains": ["*"],
                              "routes": [
                                {
                                  "match": {
                                    "prefix": "/"
                                  },
                                  "route": {
                                    "cluster": "service:emojify-api",
                                    "timeout": "6s",
                                    "retry_policy": {
                                      "retry_on": "5xx",
                                      "num_retries": 2,
                                      "per_try_timeout": "2s"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        },
                        "http_filters": [
                          {
                            "name": "envoy.router",
                            "config": {}
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
            EOL
          }
        }
      }
    
      checks {
        name = "Proxy Public Listener"
        tcp = "${POD_IP}:20000"
        interval = "10s"
        deregister_critical_service_after = "1m"
      }
    
      checks {
        name = "Destination Alias"
        alias_service = "emojify-ingress"
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emojify-ingress
  labels:
    app: emojify-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emojify-ingress
  template:
    metadata:
      name: emojify-ingress
      labels:
        app: emojify-ingress
        state: retry-part1
      annotations:
        "prometheus_io_scrape": "true"
    spec:
      volumes:
      - name: config
        configMap:
          name: emojify-ingress-configmap
          items:
          - key: config
            path: nginx.conf
      - name: envoy-init
        configMap:
          name: emojify-ingress-configmap
          items:
          - key: envoy-bootstrap
            path: envoy_bootstrap.yaml
          - key: consul-config
            path: envoy_consul_config.hcl
      - name: envoy-config
        emptyDir: {}
      containers:
      - name: emojify-ingress
        image: nginx:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/

      - name: envoy-sidecar
        image: "envoyproxy/envoy-alpine:v1.8.0"
        command: ["envoy"]
        args: ["-c","/consul-init/bootstrap.yaml"]
        ports:
          - containerPort: 20000
        volumeMounts:
        - name: envoy-config
          mountPath: /consul-init
          readOnly: true
        lifecycle:
          preStop:
            exec:
              command: [
               "sh",
               "-c",
               "/consul-init/consul services deregister -http-addr=http://${HOST_IP}:8500 -id=${POD_NAME}-emojify-ingress-proxy"
               ]
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        
      - name: prometheus-statsd
        image: prom/statsd-exporter:latest
        ports:
          - name: metrics
            containerPort: 9102
      
      initContainers:
      - name: envoy-init
        image: "nicholasjackson/envoy-init:latest"
        imagePullPolicy: Always
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: envoy-config
          mountPath: /consul-init
          readOnly: false
        - name: envoy-init
          mountPath: /init
          readOnly: false
