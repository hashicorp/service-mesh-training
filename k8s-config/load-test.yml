# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MIT

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: emojify-loadtest-configmap
data:
  EmojifySimulation.scala: |

    import scala.concurrent.duration._
    
    import io.gatling.core.Predef._
    import io.gatling.http.Predef._
    import io.gatling.jdbc.Predef._
    
    class EmojifySimulation extends Simulation {
    
    	val httpProtocol = http
    		.baseUrl("http://emojify-ingress:80")
    		.inferHtmlResources()
    		.acceptEncodingHeader("gzip, deflate")
    		.userAgentHeader("Mozilla/5.0 (X11; CrOS x86_64 11316.98.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.74 Safari/537.36")
    
    	val headers_0 = Map(
    		"Pragma" -> "no-cache",
    		"Proxy-Connection" -> "keep-alive")
    
    
    
    	val scn = scenario("RecordedSimulation")
        // Get the home page
    		.exec(http("request_home_page")
    			.get("/")
    			.headers(headers_0)
          .check(status is 200)
        )
        .pause(5 seconds)
        // Post an image
    		.exec(http("request_post_image")
    			.post("/api/")
          .body(StringBody("http://emojify-ingress/pictures/1.jpg"))
    			.headers(headers_0)
          .check(bodyString.saveAs("image_id"))
          .check(status is 200)
        )
        .pause(5 seconds)
        // Get the returned image
    		.exec(http("request_get_image")
    			.get("/api/cache/${image_id}")
    			.headers(headers_0)
          .check(status is 200)
        )
    
    	setUp(scn.inject(constantUsersPerSec(3) during (60 minutes) randomized)).protocols(httpProtocol)
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emojify-loadtest
  labels:
    app: emojify-loadtest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emojify-loadtest
  template:
    metadata:
      labels:
        app: emojify-loadtest
    spec:
      volumes:
      - name: config
        configMap:
          name: emojify-loadtest-configmap
      containers:
      - name: emojify-loadtest
        image: "denvazh/gatling"
        args: ["-s", "EmojifySimulation"]
        volumeMounts:
        - name: config
          mountPath: /opt/gatling/user-files/simulations/EmojifySimulation.scala
          subPath: EmojifySimulation.scala
          readOnly: true
        resources:
          limits:
            cpu: 300m
          requests:
            cpu: 100m
            memory: 100Mi
