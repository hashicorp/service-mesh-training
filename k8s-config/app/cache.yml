# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MIT

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: emojify-cache-configmap
data:
  envoy-bootstrap: |
    admin:
      access_log_path: "/dev/null"
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 19000
    node:
      cluster: "${POD_NAME}-emojify-cache-proxy"
      id: "${POD_NAME}-emojify-cache-proxy"
    static_resources:
      clusters:
      - name: local_agent
        connect_timeout: 1s
        type: STATIC
        http2_protocol_options: {}
        hosts:
        - socket_address:
           address: "${HOST_IP}"
           port_value: "8502"
    dynamic_resources:
      lds_config:
        ads: {}
      cds_config:
        ads: {}
      ads_config:
        api_type: GRPC
        grpc_services:
          envoy_grpc:
            cluster_name: local_agent
    stats_sinks:
    - name: "envoy.dog_statsd"
      config:
        address: 
          socket_address:
            address: "127.0.0.1"
            port_value: 9125
        prefix: "envoy"
    stats_config:
      use_all_default_tags: true
  consul-config: |
    services {
      id   = "${POD_NAME}-emojify-cache-proxy"
      name = "emojify-cache-proxy"
      kind = "connect-proxy"
      address = "${POD_IP}"
      port = 20000
    
      proxy {
        destination_service_name = "emojify-cache"
        destination_service_id = "emojify-cache"
        local_service_address = "127.0.0.1"
        local_service_port = 9090
        
        config {
            envoy_local_cluster_json = <<EOL
              {
                "@type": "type.googleapis.com/envoy.api.v2.Cluster",
                "name": "local_app",
                "connect_timeout": "5s",
                "http2_protocol_options": {},
                "hosts": [
                 {
                  "socket_address": {
                   "address": "127.0.0.1",
                   "port_value": 9090
                  }
                 }
                ]
              }
            EOL

          envoy_public_listener_json = <<EOL
            {
              "@type": "type.googleapis.com/envoy.api.v2.Listener",
              "name": "public_listener:${POD_IP}:20000",
              "address": {
                "socketAddress": {
                  "address": "${POD_IP}",
                  "portValue": 20000
                }
              },
              "filterChains": [
                {
                  "filters": [
                    {
                      "name": "envoy.http_connection_manager",
                      "config": {
                        "stat_prefix": "ingress_cache",
                        "route_config": {                
                          "name": "local_route",         
                          "virtual_hosts": [             
                            {                            
                              "name": "backend",         
                              "domains": ["*"],          
                              "routes": [                
                                {                        
                                  "match": {             
                                    "prefix": "/",
                                    "grpc": {}
                                  },                     
                                  "route": {             
                                    "cluster": "local_app"
                                  }                      
                                }                        
                              ]                          
                            }                            
                          ]                              
                        },                               
                        "http_filters": [                
                          { 
                            "name": "envoy.grpc_http1_bridge",
                            "config": {}
                          },
                          {                              
                            "name": "envoy.router",      
                            "config": {}                 
                          }
                        ]                                
                      }                                  
                    }                                    
                  ]                                      
                }                                        
              ]                                          
            }                                          
          EOL
        }                                              
      }                                                
                                                       
      checks {                                         
        name = "Proxy Public Listener"                 
        tcp = "${POD_IP}:20000"                        
        interval = "10s"                               
        deregister_critical_service_after = "1m"       
      }                                                
                                                       
      checks {                                         
        name = "Destination Alias"                     
        alias_service = "emojify-cache"              
      }                                                
    }                                                  
                                                       
---                                                    
apiVersion: apps/v1                                    
kind: Deployment
metadata:
  name: emojify-cache
  labels:
    app: emojify-cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emojify-cache
  template:
    metadata:
      labels:
        app: emojify-cache
      annotations:
        "prometheus_io_scrape": "true"
    spec:
      volumes:
      - name: envoy-init
        configMap:
          name: emojify-cache-configmap
          items:
          - key: envoy-bootstrap
            path: envoy_bootstrap.yaml
          - key: consul-config
            path: envoy_consul_config.hcl
      - name: envoy-config
        emptyDir: {}
      containers:

      - name: emojify-cache
        image: "nicholasjackson/emojify-cache:v0.4.2"
        env:
        - name: STATSD_ADDRESS
          value: localhost:9125
      
      - name: envoy-sidecar
        image: "envoyproxy/envoy-alpine:v1.8.0"
        command: ["envoy"]
        args: ["-c","/consul-init/bootstrap.yaml"]
        ports:
          - containerPort: 20000
        volumeMounts:
        - name: envoy-config
          mountPath: /consul-init
          readOnly: true
        lifecycle:
          preStop:
            exec:
              command: [
               "sh",
               "-c",
               "/consul-init/consul services deregister -http-addr=http://${HOST_IP}:8500 -id=${POD_NAME}-emojify-cache-proxy"
               ]
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        
      - name: prometheus-statsd
        image: prom/statsd-exporter:latest
        ports:
          - name: metrics
            containerPort: 9102
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
      
      initContainers:
      - name: envoy-init
        image: "nicholasjackson/envoy-init:latest"
        imagePullPolicy: Always
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: envoy-config
          mountPath: /consul-init
          readOnly: false
        - name: envoy-init
          mountPath: /init
          readOnly: false

